<Workspace Category="Honeybee.04 :: Daylight :: Daylight" Description="Hourly results for a sensor for several hours during the year.
-" ID="afdebbf7-838d-4889-90db-3aaa32d0054c" Name="Generate Images" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;genimages_node.py&quot;;" ShouldFocus="false" guid="e8741468-066e-4bb6-9703-82fb5dc64408" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="3a3d1a8b-4d75-4873-8b7c-36517fed57af" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO
from System.Reflection import Assembly

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    dynamo = Assembly.Load('DynamoCore')
    dynamoV = dynamo.GetName().Version.ToString().split('.')
    _ver = float(dynamoV[0] + '.' + dynamoV[1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%s\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="6985b67e-e066-471b-837b-81ff28913f89" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_imgCollection" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// An imgage collection from the results of an image-based&#xD;&#xA;// study.&#xD;&#xA;_imgCollection: var;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="129a2548-cbe2-4dad-80c7-7fb4f31599d9" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="hoys_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// An optional list of hours for hours of the year if you don't want&#xD;&#xA;// the analysis to be calculated for all the hours.&#xD;&#xA;hoys_: double[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7fa9667d-8fa0-49cf-97a1-30f061fc3806" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="blindStates_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// A list of blind states for light sources as tuples for&#xD;&#xA;// hours of the year. You can use Dynamic Blinds Schedule component&#xD;&#xA;// to generate this schedule. If left empty the first state of each&#xD;&#xA;// window group will be used.&#xD;&#xA;blindStates_: var[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="e8b1b389-30c1-4f00-9a20-757feb634c10" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_mode_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// An integer between 0-3.&#xD;&#xA;// 0 returns the combined image of the sources with total - direct + sun values&#xD;&#xA;// 1 returns the combined image of the sources with total values&#xD;&#xA;// 2 returns the combined image of the sources with direct values&#xD;&#xA;// 3 returns the combined image of the sources with sun values&#xD;&#xA;_mode_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];&#xA;out[1];" ShouldFocus="false" guid="e9585213-7201-4204-b32f-9c4e6cb31dca" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="74f7242b-a8a3-4ed6-8ebd-a2425b84968c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Output" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// The filepath of the image taken with this component.&#xD;&#xA;Output;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="357f9699-fc3e-4bca-befb-760358a2c42a" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="images" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="570">
      <Symbol value="// The filepath of the image taken with this component.&#xD;&#xA;images;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="1bf70c65-12f5-4583-8af4-abf24e24cab7" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="817812a2-66e1-4e47-82c6-9a0395cd92db" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="3a3d1a8b-4d75-4873-8b7c-36517fed57af" end_index="0" portType="0" start="e8741468-066e-4bb6-9703-82fb5dc64408" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3a3d1a8b-4d75-4873-8b7c-36517fed57af" end_index="1" portType="0" start="e8741468-066e-4bb6-9703-82fb5dc64408" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" end_index="0" portType="0" start="3a3d1a8b-4d75-4873-8b7c-36517fed57af" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" end_index="1" portType="0" start="6985b67e-e066-471b-837b-81ff28913f89" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" end_index="2" portType="0" start="129a2548-cbe2-4dad-80c7-7fb4f31599d9" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" end_index="3" portType="0" start="7fa9667d-8fa0-49cf-97a1-30f061fc3806" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" end_index="4" portType="0" start="e8b1b389-30c1-4f00-9a20-757feb634c10" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e9585213-7201-4204-b32f-9c4e6cb31dca" end_index="0" portType="0" start="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="74f7242b-a8a3-4ed6-8ebd-a2425b84968c" end_index="0" portType="0" start="e9585213-7201-4204-b32f-9c4e6cb31dca" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="357f9699-fc3e-4bca-befb-760358a2c42a" end_index="0" portType="0" start="e9585213-7201-4204-b32f-9c4e6cb31dca" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="1bf70c65-12f5-4583-8af4-abf24e24cab7" end_index="0" portType="0" start="3a3d1a8b-4d75-4873-8b7c-36517fed57af" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="1bf70c65-12f5-4583-8af4-abf24e24cab7" end_index="1" portType="0" start="8dd0256a-4fa0-4a9b-9dd3-e1cbc78aa31d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="817812a2-66e1-4e47-82c6-9a0395cd92db" end_index="0" portType="0" start="1bf70c65-12f5-4583-8af4-abf24e24cab7" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
