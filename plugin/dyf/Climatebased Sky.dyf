<Workspace Category="Honeybee.02 :: Daylight :: Light Sources" Description="Climate-based Sky." ID="5852b071-829d-44ac-bd47-1d58cc0260e6" Name="Climatebased Sky" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;climatebased_node.py&quot;;" ShouldFocus="false" guid="841fb76a-6c69-460c-a758-253c45b130aa" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="a297d4f2-948c-46d1-b0c6-ba6c108d75e6" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO
from System.Reflection import Assembly

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    dynamo = Assembly.Load('DynamoCore')
    dynamoV = dynamo.GetName().Version.ToString().split('.')
    _ver = float(dynamoV[0] + '.' + dynamoV[1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%s\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="5c8341da-d321-4182-862b-2cf579b8f867" inputcount="6" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
      <PortInfo default="false" index="5"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="5ff29494-9a24-411c-84d5-fd3f85b68c18" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="north_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// A number between 0 and 360 that represents the degrees off from&#xD;&#xA;// the y-axis to make North. The default North direction is set to the&#xD;&#xA;// Y-axis (default: 0 degrees).&#xD;&#xA;north_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="21c4870a-d111-42a3-aefd-f729f44e3107" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_wea" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// A Ladybug wea.&#xD;&#xA;_wea: var;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="2e890f12-5960-4217-ba70-8f2a664fac8c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_month_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// Input a number to indicate month (1..12) (default: 6).&#xD;&#xA;_month_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7e98eba0-48c5-4489-8504-42e12d87362d" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_day_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Input a number to indicate day (1..31) (default: 21).&#xD;&#xA;_day_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="c181d28a-d512-4518-ba0e-ea2c29b4b664" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_hour_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="855">
      <Symbol value="// Input a number to indicate hour (0..23) (default: 12).&#xD;&#xA;_hour_: double = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="47391378-b3d9-4de1-97a9-51dae2b93d45" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="ee4622f0-9448-4c29-aa26-fab83a2b2ffb" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="sky" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Honeybee sky. You can use this sky to create a daylight recipe.&#xD;&#xA;sky;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="f97f8841-53a4-409b-b4e7-1c8494398ad1" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="0a77a5e2-7699-4d9f-9354-7f6c8f4f277f" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="a297d4f2-948c-46d1-b0c6-ba6c108d75e6" end_index="0" portType="0" start="841fb76a-6c69-460c-a758-253c45b130aa" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="a297d4f2-948c-46d1-b0c6-ba6c108d75e6" end_index="1" portType="0" start="841fb76a-6c69-460c-a758-253c45b130aa" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5c8341da-d321-4182-862b-2cf579b8f867" end_index="0" portType="0" start="a297d4f2-948c-46d1-b0c6-ba6c108d75e6" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5c8341da-d321-4182-862b-2cf579b8f867" end_index="1" portType="0" start="5ff29494-9a24-411c-84d5-fd3f85b68c18" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5c8341da-d321-4182-862b-2cf579b8f867" end_index="2" portType="0" start="21c4870a-d111-42a3-aefd-f729f44e3107" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5c8341da-d321-4182-862b-2cf579b8f867" end_index="3" portType="0" start="2e890f12-5960-4217-ba70-8f2a664fac8c" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5c8341da-d321-4182-862b-2cf579b8f867" end_index="4" portType="0" start="7e98eba0-48c5-4489-8504-42e12d87362d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5c8341da-d321-4182-862b-2cf579b8f867" end_index="5" portType="0" start="c181d28a-d512-4518-ba0e-ea2c29b4b664" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="47391378-b3d9-4de1-97a9-51dae2b93d45" end_index="0" portType="0" start="5c8341da-d321-4182-862b-2cf579b8f867" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="ee4622f0-9448-4c29-aa26-fab83a2b2ffb" end_index="0" portType="0" start="47391378-b3d9-4de1-97a9-51dae2b93d45" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f97f8841-53a4-409b-b4e7-1c8494398ad1" end_index="0" portType="0" start="a297d4f2-948c-46d1-b0c6-ba6c108d75e6" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f97f8841-53a4-409b-b4e7-1c8494398ad1" end_index="1" portType="0" start="5c8341da-d321-4182-862b-2cf579b8f867" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0a77a5e2-7699-4d9f-9354-7f6c8f4f277f" end_index="0" portType="0" start="f97f8841-53a4-409b-b4e7-1c8494398ad1" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
