<Workspace Category="Honeybee.03 :: Daylight :: Recipe" Description="Grid-based Recipe.
-" ID="bd179ba2-fca7-4039-bb5b-92c2433d80d5" Name="Grid-Based Recipe" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;gridbasedrecipe_node.py&quot;;" ShouldFocus="false" guid="843d7475-0e22-49ef-ac81-0db9e3f0b7b1" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="f5c78d24-f4a1-4c25-ba5e-c5d138a9101f" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO
from System.Reflection import Assembly

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    dynamo = Assembly.Load('DynamoCore')
    dynamoV = dynamo.GetName().Version.ToString().split('.')
    _ver = float(dynamoV[0] + '.' + dynamoV[1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%s\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="0d90f58c-f10c-4a4b-b980-a26fec89a174" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="c6bdd73e-5bf8-4428-b391-50d2860ca743" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_sky" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// A radiance sky. Find honeybee skies under 02::Daylight::Light Sources.&#xD;&#xA;_sky: var;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d0775e0b-5cd3-43c3-9545-40c9601ec860" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_analysisGrids" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// A list of analysis grids.&#xD;&#xA;_analysisGrids: var[];"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="87e990a0-68b6-4d9e-90fc-9e8f8879c540" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_analysisType_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// Analysis type. [0] illuminance(lux), [1] radiation (kwh),&#xD;&#xA;// [2] luminance (Candela).&#xD;&#xA;_analysisType_: int = 0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="722522d7-c2e2-45a9-9d5a-9ec7c265f1ac" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_radiancePar_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Radiance parameters for Grid-based analysis. Find Radiance&#xD;&#xA;// parameters node under 03::Daylight::Recipes.&#xD;&#xA;_radiancePar_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="fa709684-0464-4b1c-ac25-c983b0b253f5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="7730c0f4-f86b-40ec-9934-398826d39269" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="analysisRecipe" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Grid-based analysis recipe. Connect this recipe to&#xD;&#xA;// Run Radiance Analysis to run a grid-based analysis.&#xD;&#xA;analysisRecipe;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="3c9dbc6c-637f-4ef1-8d58-10ccaa591dfc" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="8010c654-15fb-4bed-a3a6-ea718d9b16b0" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="f5c78d24-f4a1-4c25-ba5e-c5d138a9101f" end_index="0" portType="0" start="843d7475-0e22-49ef-ac81-0db9e3f0b7b1" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f5c78d24-f4a1-4c25-ba5e-c5d138a9101f" end_index="1" portType="0" start="843d7475-0e22-49ef-ac81-0db9e3f0b7b1" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0d90f58c-f10c-4a4b-b980-a26fec89a174" end_index="0" portType="0" start="f5c78d24-f4a1-4c25-ba5e-c5d138a9101f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0d90f58c-f10c-4a4b-b980-a26fec89a174" end_index="1" portType="0" start="c6bdd73e-5bf8-4428-b391-50d2860ca743" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0d90f58c-f10c-4a4b-b980-a26fec89a174" end_index="2" portType="0" start="d0775e0b-5cd3-43c3-9545-40c9601ec860" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0d90f58c-f10c-4a4b-b980-a26fec89a174" end_index="3" portType="0" start="87e990a0-68b6-4d9e-90fc-9e8f8879c540" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0d90f58c-f10c-4a4b-b980-a26fec89a174" end_index="4" portType="0" start="722522d7-c2e2-45a9-9d5a-9ec7c265f1ac" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="fa709684-0464-4b1c-ac25-c983b0b253f5" end_index="0" portType="0" start="0d90f58c-f10c-4a4b-b980-a26fec89a174" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7730c0f4-f86b-40ec-9934-398826d39269" end_index="0" portType="0" start="fa709684-0464-4b1c-ac25-c983b0b253f5" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3c9dbc6c-637f-4ef1-8d58-10ccaa591dfc" end_index="0" portType="0" start="f5c78d24-f4a1-4c25-ba5e-c5d138a9101f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3c9dbc6c-637f-4ef1-8d58-10ccaa591dfc" end_index="1" portType="0" start="0d90f58c-f10c-4a4b-b980-a26fec89a174" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8010c654-15fb-4bed-a3a6-ea718d9b16b0" end_index="0" portType="0" start="3c9dbc6c-637f-4ef1-8d58-10ccaa591dfc" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
