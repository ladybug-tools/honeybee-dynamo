<Workspace Category="Honeybee.01 :: Daylight :: Materials" Description="Radiance Glass Material from visible transmitance for red, green and blue
-" ID="bc8c3398-f3f9-4538-8676-9ac65c9d18f9" Name="Radiance Glass Material 3" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;radglassmaterial3_node.py&quot;;" ShouldFocus="false" guid="5641192a-e0d7-47e7-b9d0-4416403a4312" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="fec62cb0-cebe-4e74-b4f0-fa86f079a2d0" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO
from System.Reflection import Assembly

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    dynamo = Assembly.Load('DynamoCore')
    dynamoV = dynamo.GetName().Version.ToString().split('.')
    _ver = float(dynamoV[0] + '.' + dynamoV[1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%s\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="d78a8d2e-b103-44b5-8c16-a107655a84f9" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="71c23831-8a44-4aeb-bb83-e8e84493cb54" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_name" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// Material name.&#xD;&#xA;_name: string;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d8a973eb-d580-4058-8b7b-b0cef3038a08" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_rVis_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// Visible transmittance for red channel (0..1).&#xD;&#xA;_rVis_: double = 0.6;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="50eca3c2-3f25-40a0-8901-e2663808c986" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_gVis_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// Visible transmittance for green channel (0..1).&#xD;&#xA;_gVis_: var = 0.6;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="361124cc-6697-4687-aea4-bb7c5d9f69f8" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_bVis_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Visible transmittance for blue channel (0..1).&#xD;&#xA;_bVis_: var = 0.6;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="1631ce17-edbe-43ae-ab32-8afef012e800" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="1ff764c5-3f1f-4375-851f-353e084a2acc" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="material" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Radiance glass material.&#xD;&#xA;material;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="7ab94e48-ff0f-4399-8233-754bced670f1" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="eeea7001-8c54-4b3d-91ac-2329cedac7b9" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="fec62cb0-cebe-4e74-b4f0-fa86f079a2d0" end_index="0" portType="0" start="5641192a-e0d7-47e7-b9d0-4416403a4312" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="fec62cb0-cebe-4e74-b4f0-fa86f079a2d0" end_index="1" portType="0" start="5641192a-e0d7-47e7-b9d0-4416403a4312" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="d78a8d2e-b103-44b5-8c16-a107655a84f9" end_index="0" portType="0" start="fec62cb0-cebe-4e74-b4f0-fa86f079a2d0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="d78a8d2e-b103-44b5-8c16-a107655a84f9" end_index="1" portType="0" start="71c23831-8a44-4aeb-bb83-e8e84493cb54" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="d78a8d2e-b103-44b5-8c16-a107655a84f9" end_index="2" portType="0" start="d8a973eb-d580-4058-8b7b-b0cef3038a08" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="d78a8d2e-b103-44b5-8c16-a107655a84f9" end_index="3" portType="0" start="50eca3c2-3f25-40a0-8901-e2663808c986" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="d78a8d2e-b103-44b5-8c16-a107655a84f9" end_index="4" portType="0" start="361124cc-6697-4687-aea4-bb7c5d9f69f8" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="1631ce17-edbe-43ae-ab32-8afef012e800" end_index="0" portType="0" start="d78a8d2e-b103-44b5-8c16-a107655a84f9" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="1ff764c5-3f1f-4375-851f-353e084a2acc" end_index="0" portType="0" start="1631ce17-edbe-43ae-ab32-8afef012e800" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab94e48-ff0f-4399-8233-754bced670f1" end_index="0" portType="0" start="fec62cb0-cebe-4e74-b4f0-fa86f079a2d0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab94e48-ff0f-4399-8233-754bced670f1" end_index="1" portType="0" start="d78a8d2e-b103-44b5-8c16-a107655a84f9" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="eeea7001-8c54-4b3d-91ac-2329cedac7b9" end_index="0" portType="0" start="7ab94e48-ff0f-4399-8233-754bced670f1" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
