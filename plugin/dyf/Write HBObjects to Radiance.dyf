<Workspace Category="Honeybee.00 :: Create" Description="Write honeybee objects to a Radiance file.
-" ID="7d82ce85-900d-4304-a688-77532b2291da" Name="Write HBObjects to Radiance" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;hbtorad_node.py&quot;;" ShouldFocus="false" guid="e0882aec-17ee-4466-affc-ff3902421eba" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="7c7019df-e92a-4041-943a-cce503a8ed4d" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO
from System.Reflection import Assembly

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    dynamo = Assembly.Load('DynamoCore')
    dynamoV = dynamo.GetName().Version.ToString().split('.')
    _ver = float(dynamoV[0] + '.' + dynamoV[1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%s\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="e26eb018-d814-48e4-a11b-5c229f133c2e" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="834c6b90-9071-4efd-82c3-528745248643" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_hbObjects" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// A list of honeybee objects.&#xD;&#xA;_hbObjects: var[];"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="fda208d4-eb0a-4d35-b528-79118d2eceac" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_folder" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// Path to targert folder (e.g. c:\ladybug\context).&#xD;&#xA;_folder: string;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="f3e86079-cd0c-4f65-962e-47f7b9db02a0" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_filename" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// File name as a string.&#xD;&#xA;_filename: string;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9fee60fb-77f4-42ac-8911-b1803933bf81" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_write" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Set to True to write the file.&#xD;&#xA;_write: bool = false;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="15adbbad-648a-42d4-8309-ebcff7f2e809" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="5af3fed2-e716-4ac1-b5bc-1567bed8735f" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="radFile" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Fullpath to the radiance file. Use this file to create a radiance&#xD;&#xA;// scene.&#xD;&#xA;radFile;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="2aa01c8a-68f1-4ffd-8eef-546a8fa5d82d" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="36499d16-9687-4f32-b4d6-5216c93e85b0" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="7c7019df-e92a-4041-943a-cce503a8ed4d" end_index="0" portType="0" start="e0882aec-17ee-4466-affc-ff3902421eba" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7c7019df-e92a-4041-943a-cce503a8ed4d" end_index="1" portType="0" start="e0882aec-17ee-4466-affc-ff3902421eba" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e26eb018-d814-48e4-a11b-5c229f133c2e" end_index="0" portType="0" start="7c7019df-e92a-4041-943a-cce503a8ed4d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e26eb018-d814-48e4-a11b-5c229f133c2e" end_index="1" portType="0" start="834c6b90-9071-4efd-82c3-528745248643" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e26eb018-d814-48e4-a11b-5c229f133c2e" end_index="2" portType="0" start="fda208d4-eb0a-4d35-b528-79118d2eceac" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e26eb018-d814-48e4-a11b-5c229f133c2e" end_index="3" portType="0" start="f3e86079-cd0c-4f65-962e-47f7b9db02a0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e26eb018-d814-48e4-a11b-5c229f133c2e" end_index="4" portType="0" start="9fee60fb-77f4-42ac-8911-b1803933bf81" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="15adbbad-648a-42d4-8309-ebcff7f2e809" end_index="0" portType="0" start="e26eb018-d814-48e4-a11b-5c229f133c2e" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="5af3fed2-e716-4ac1-b5bc-1567bed8735f" end_index="0" portType="0" start="15adbbad-648a-42d4-8309-ebcff7f2e809" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2aa01c8a-68f1-4ffd-8eef-546a8fa5d82d" end_index="0" portType="0" start="7c7019df-e92a-4041-943a-cce503a8ed4d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2aa01c8a-68f1-4ffd-8eef-546a8fa5d82d" end_index="1" portType="0" start="e26eb018-d814-48e4-a11b-5c229f133c2e" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="36499d16-9687-4f32-b4d6-5216c93e85b0" end_index="0" portType="0" start="2aa01c8a-68f1-4ffd-8eef-546a8fa5d82d" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
