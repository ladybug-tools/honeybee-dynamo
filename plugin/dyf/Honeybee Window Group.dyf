{
  "Uuid": "d38a2365-031b-44e5-8602-3434c76d82fb",
  "IsCustomNode": true,
  "Category": "Honeybee.00 :: Create",
  "Description": "Honeybee Window Group\r\nA window group is a group of HBWindow surfaces which will be grouped together\r\nfor 3-phase daylight analysis. View matrix will be calculated for all the Window\r\nsurfaces in a group once. Window surfaces in a group shoudl have the same normal\r\ndirection, and same BSDF materials will be assigned to all the windows in this\r\ngroup.\r\n-",
  "Name": "Honeybee Window Group",
  "ElementResolver": {
    "ResolutionMap": {
      "Autodesk.Geometry": {
        "Key": "Autodesk.DesignScript.Geometry.Geometry",
        "Value": "ProtoGeometry.dll"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Honeybee\";\n\"hbwingroup_node.py\";",
      "Id": "8bbe7d54b63d4f6aa55d35646f37ffbf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d12b59b434a4e1e899f0b43cf2879c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ed6eeb7f5e147f59a0ed856ac117da2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\r\n        \r\n\"\"\"Find packages from Dynamo folder and prepare the code.\"\"\"\r\nimport clr\r\nfrom System import AppDomain, Environment, IO\r\nfrom System.Reflection import Assembly\r\n\r\ndef tryGetPluginPath(plugin):\r\n    \"\"\"Try to get path to plugin folder.\"\"\"\r\n    dynamo = Assembly.Load('DynamoCore')\r\n    dynamoV = dynamo.GetName().Version.ToString().split('.')\r\n    _ver = float(dynamoV[0] + '.' + dynamoV[1])\r\n\r\n    assert _ver >= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'\r\n\r\n    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)\r\n    _dynamoPath = '%s\\\\%s\\\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)\r\n    # if the assembly is cached put Revit folder first, and then try to load it from core\r\n    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),\r\n                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))\r\n    _settingsFilename = 'DynamoSettings.xml'\r\n\r\n    pkf = []\r\n    for path in _dynamoPaths:\r\n        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)\r\n        if IO.File.Exists(settingsFile):\r\n            with open(settingsFile, 'rb') as outf:\r\n                for line in outf:\r\n                    if line.strip().startswith('<CustomPackageFolders>'):\r\n                        for l in outf:\r\n                            if l.strip().startswith('</CustomPackageFolders>'):\r\n                                break\r\n                            else:\r\n                                pkf.append(l.replace('</string>', '').replace('<string>', '').strip())\r\n\r\n    for p in pkf:\r\n        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')\r\n        # In case of custom folders user may put honeybee under the root folder\r\n        ppp = IO.Path.Combine(p, plugin, 'extra')\r\n        if IO.Directory.Exists(pp):\r\n            return pp\r\n        elif IO.Directory.Exists(ppp):\r\n            return ppp\r\n\r\n\r\ntry:\r\n    plugin, filename = IN\r\n\r\n    p = tryGetPluginPath(plugin)\r\n\r\n    if not p:\r\n        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))\r\n\r\n\t# import the file and wrap it into sys.append\r\n    f = IO.Path.Combine(p, 'nodesrc', filename)\r\n    with open(f, 'rb') as inf:\r\n        source = '    '.join(inf.readlines())\r\n\r\n    header = 'try:\\n    import sys\\n' + \\\r\n        '    sys.path.append(r\\'{}\\')\\n\\n'.format(p) + \\\r\n        '    sys.path.append(r\\'C:\\Program Files (x86)\\IronPython 2.7\\Lib\\')\\n\\n' + \\\r\n        '    '\r\n\r\n    footer = '\\nexcept Exception, e:\\n' + \\\r\n        '    import traceback\\n' + \\\r\n        '    OUT = \"ERROR:\\\\n\\\\t{}\".format(str(e)) + \\\\\\n' + \\\r\n        '    \"\\\\n\\\\nIf you think this is a bug submit an issue on github.\\\\n\" + \\\\\\n' + \\\r\n        '    \"https://github.com/ladybug-tools/honeybee-dynamo/issues\\\\n\" +  \\\\\\n' + \\\r\n        '    \"and include below error message:\\\\n\\\\n\" + \\\\\\n' + \\\r\n        '    \"{}\".format(traceback.format_exc())\\n'\r\n\r\n    OUT = header + source + footer\r\n\r\nexcept Exception, e:\r\n    import sys\r\n    sys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\Lib')\r\n    import traceback\r\n    OUT = \"ERROR:\\n\\t{}\".format(str(e)) + \\\r\n        \"\\n\\nIf you think this is a bug submit an issue on github.\\n\" + \\\r\n        \"https://github.com/ladybug-tools/honeybee-dynamo/issues\\n\" +  \\\r\n        \"and include below error message:\\n\\n\" + \\\r\n        \"{}\".format(traceback.format_exc())\r\n\r\n      ",
      "VariableInputPorts": true,
      "Id": "cc31de0f38d44764b516968b9b00f3fc",
      "Inputs": [
        {
          "Id": "51698b619dc24a46a481823955dbf1b2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4914520500c4f04a9f32ed20090d57a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ac2644985aa41ec8b1cc2142dd78ae7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "f1760dc1160d42eab58fd47156835b73",
      "Inputs": [
        {
          "Id": "512e522fd8544fa0acd8a5a3b45b6339",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6c72388165140599d5e45acf64bb81e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24b40e507a5149f081160ff724081a33",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a97ff88aaba14170877950e0d330f23b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ec7af46f64240ed9aa68c8366aa4dcf",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1800ed1f9bb8466487d45da8a4f90c50",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a IronPython script from a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_geo",
        "TypeName": "Autodesk.DesignScript.Geometry.Geometry",
        "TypeRank": 1,
        "DefaultValue": null,
        "Description": " A list of input geometry."
      },
      "Id": "93203a63d4004393bf80a07f50a5b926",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "218a3bd0de7d464db2e3d1bef73ae9aa",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_name",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": " A name for this window group. You can use this name later to add\n or remove this group contribution to 3-Phase analysis."
      },
      "Id": "b6e153269db548d392ce7795fa586356",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de5175c6a5684dedbc066e4c5cc7fdce",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "radMat_",
        "TypeName": "var",
        "TypeRank": 0,
        "DefaultValue": "null",
        "Description": " A Radiance material. If radiance matrial is not provided the\n component will use the type to assign the default material\n (%60 transmittance)for the surface."
      },
      "Id": "90277a99dd2c42b182c72c8d83072b20",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b92ed9946e8d436795b32aa0a0938bcd",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "states_",
        "TypeName": "var",
        "TypeRank": 1,
        "DefaultValue": "DesignScript.Builtin.Dictionary.ByKeysValues([], [])",
        "Description": " A list of HBWindow surfaces by similar normal direction."
      },
      "Id": "b83aa13b684d48b5885ac564d64ae39e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "03e9653a0e894a44adacfe22a83b899e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "out[0];",
      "Id": "bc431665225e44c69659c5fef40c5ece",
      "Inputs": [
        {
          "Id": "3144e69cc3b24fa794556ccc5c3aee4a",
          "Name": "out",
          "Description": "out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19d8daa00c5b40bf9cf52636d519e555",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// List of HBWindowsSrf for this window group.\r\nHBWinGroup;",
      "Id": "41164316367e4e24b7cc6eb9f6142851",
      "Inputs": [
        {
          "Id": "79a6a450f329480cbee39c9878d95f48",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\r\n        \r\n\"\"\"Report errors\"\"\"\r\nimportErr, runErr = IN\r\nerrors = []\r\n\r\nif importErr and str(importErr).startswith(\"ERROR:\"):\r\n    errors.append(importErr)\r\n\r\nif runErr and str(runErr).startswith(\"ERROR:\"):\r\n    errors.append(runErr)\r\n\r\nif len(errors)==0:\r\n    OUT = \"All good! Vvizzzz.\"\r\nelse:\r\n    OUT = \"\\n\".join(errors)\r\n\r\n      ",
      "VariableInputPorts": true,
      "Id": "f7de0ecf959a4d0ab56b68f83b6443e3",
      "Inputs": [
        {
          "Id": "97a32fd18b2d4cbf8d51a8011683e323",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "076d942d3b2a453c875671abd9f50bdc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "902b9564105e4803ad46503153b56f1e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// Report\r\nERRReport;",
      "Id": "4ae3cacf117d4b5487eaea283732fc3a",
      "Inputs": [
        {
          "Id": "772c8177ddbb4aad8d1ef297aac30dbc",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "5d12b59b434a4e1e899f0b43cf2879c9",
      "End": "51698b619dc24a46a481823955dbf1b2",
      "Id": "c185b027afcf4c0fb47da6f31fcd6663"
    },
    {
      "Start": "6ed6eeb7f5e147f59a0ed856ac117da2",
      "End": "f4914520500c4f04a9f32ed20090d57a",
      "Id": "072701a58ffe40a596f8c78e089e8793"
    },
    {
      "Start": "4ac2644985aa41ec8b1cc2142dd78ae7",
      "End": "512e522fd8544fa0acd8a5a3b45b6339",
      "Id": "62203c3ee6ea493391ed69574c7b2ab7"
    },
    {
      "Start": "4ac2644985aa41ec8b1cc2142dd78ae7",
      "End": "97a32fd18b2d4cbf8d51a8011683e323",
      "Id": "26a9814b9c8647208a326b9548745d0a"
    },
    {
      "Start": "1800ed1f9bb8466487d45da8a4f90c50",
      "End": "3144e69cc3b24fa794556ccc5c3aee4a",
      "Id": "681f459db5c14a62812dcebf2cb062f2"
    },
    {
      "Start": "1800ed1f9bb8466487d45da8a4f90c50",
      "End": "076d942d3b2a453c875671abd9f50bdc",
      "Id": "91e7e4b94ccc40228f154a64864261e2"
    },
    {
      "Start": "218a3bd0de7d464db2e3d1bef73ae9aa",
      "End": "d6c72388165140599d5e45acf64bb81e",
      "Id": "ddcc929172f64c35bf7176fb3d962d27"
    },
    {
      "Start": "de5175c6a5684dedbc066e4c5cc7fdce",
      "End": "24b40e507a5149f081160ff724081a33",
      "Id": "1f62a23499a74e6893e77a61bff1db55"
    },
    {
      "Start": "b92ed9946e8d436795b32aa0a0938bcd",
      "End": "a97ff88aaba14170877950e0d330f23b",
      "Id": "4ba4d774bc4b46cf9d23394d3de4ba49"
    },
    {
      "Start": "03e9653a0e894a44adacfe22a83b899e",
      "End": "3ec7af46f64240ed9aa68c8366aa4dcf",
      "Id": "3ec61e46af1a49ce82810f95d851325f"
    },
    {
      "Start": "19d8daa00c5b40bf9cf52636d519e555",
      "End": "79a6a450f329480cbee39c9878d95f48",
      "Id": "393a89bc10e64aaea7f862bd6e8664b3"
    },
    {
      "Start": "902b9564105e4803ad46503153b56f1e",
      "End": "772c8177ddbb4aad8d1ef297aac30dbc",
      "Id": "abbdbfb3547344958fdcef1c895c2a71"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.3.8810",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -34.0,
      "EyeY": -34.0,
      "EyeZ": 21.190000534057617,
      "LookX": -14.1899995803833,
      "LookY": -43.060001373291016,
      "LookZ": -41.650001525878906,
      "UpX": -0.17000000178813934,
      "UpY": 0.85000002384185791,
      "UpZ": -0.5
    },
    "NodeViews": [
      {
        "Id": "8bbe7d54b63d4f6aa55d35646f37ffbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "input python script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -750.0,
        "Y": 390.0
      },
      {
        "Id": "cc31de0f38d44764b516968b9b00f3fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "import and prepare py code",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -355.0,
        "Y": 385.0
      },
      {
        "Id": "f1760dc1160d42eab58fd47156835b73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "core",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -75.0,
        "Y": 460.0
      },
      {
        "Id": "93203a63d4004393bf80a07f50a5b926",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "_geo",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -750.0,
        "Y": 475.0
      },
      {
        "Id": "b6e153269db548d392ce7795fa586356",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "_name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -750.0,
        "Y": 570.0
      },
      {
        "Id": "90277a99dd2c42b182c72c8d83072b20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "radMat_",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -750.0,
        "Y": 665.0
      },
      {
        "Id": "b83aa13b684d48b5885ac564d64ae39e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "states_",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -750.0,
        "Y": 760.0
      },
      {
        "Id": "bc431665225e44c69659c5fef40c5ece",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "decompose outputs",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 150.0,
        "Y": 515.0
      },
      {
        "Id": "41164316367e4e24b7cc6eb9f6142851",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "HBWinGroup",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 380.0,
        "Y": 475.0
      },
      {
        "Id": "f7de0ecf959a4d0ab56b68f83b6443e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Error report",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 150.0,
        "Y": 380.0
      },
      {
        "Id": "4ae3cacf117d4b5487eaea283732fc3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ERRReport",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 380.0,
        "Y": 380.0
      }
    ],
    "Annotations": [],
    "X": 400.0,
    "Y": -100.0,
    "Zoom": 0.5
  }
}