<Workspace Category="Honeybee.04 :: Daylight :: Daylight" Description="Annual Daylight Metrics
-" ID="0a1c64be-8d1c-4e77-928c-02efb89497a0" Name="Annual Daylight Metrics" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;annualmetrics_node.py&quot;;" ShouldFocus="false" guid="49fb47fe-d2a0-4678-bc4c-de04bf5bcd22" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="2150ec12-1e85-4605-bf49-4ddf53b3a9ec" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO
from System.Reflection import Assembly

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    dynamo = Assembly.Load('DynamoCore')
    dynamoV = dynamo.GetName().Version.ToString().split('.')
    _ver = float(dynamoV[0] + '.' + dynamoV[1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%s\\%.1f' % ('Dynamo', 'Dynamo Core', _ver)
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="f1511124-9388-4233-a05a-415f740ca871" inputcount="6" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
      <PortInfo default="false" index="5"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="ea5a51ff-7f63-447f-946a-e546a2529fce" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_analysisGrid" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// An analysis grid output from run Radiance analysis.&#xD;&#xA;_analysisGrid: var;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="2d064ee3-42fc-4df4-9e69-22a2ee045966" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="blindStates_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// List of state ids for all the sources for input hoys.&#xD;&#xA;// If you want a source to be removed set the state to -1. You can use&#xD;&#xA;// this option to study the effect of different blind states.&#xD;&#xA;blindStates_: var[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="6c2c7260-79b4-4e50-a75a-1969e937fe15" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_occSchedule_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// An annual occupancy schedule.&#xD;&#xA;_occSchedule_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9faffb7c-b28b-4a3d-ab99-2539156ccf75" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_threshold_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Threshhold for daylight autonomy in lux (default: 300).&#xD;&#xA;_threshold_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="c30e7cfc-9c46-4bb9-8319-f4e95ff7916d" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_minmax_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="855">
      <Symbol value="// A list for min, max value for useful daylight illuminance&#xD;&#xA;_minmax_: int[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];&#xA;out[1];&#xA;out[2];&#xA;out[3];&#xA;out[4];&#xA;out[5];" ShouldFocus="false" guid="8005d75e-8a99-477a-beca-68a44b44c99e" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="7e3628b5-c297-472d-9a13-bb9c9160c0c8" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="DA" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Daylight autonomy. The percentage of time that each sensor&#xD;&#xA;// recieves equal or more than the threshold.&#xD;&#xA;DA;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="455a16f6-9cf4-454b-b1ed-45d1a3395ef9" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="CDA" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="570">
      <Symbol value="// Continuous daylight autonomy.&#xD;&#xA;CDA;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="461031b8-1a3c-4f49-9613-85a55825c77c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="UDI" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="665">
      <Symbol value="// Useful daylight illuminance. The percentage of time that illuminace&#xD;&#xA;// falls between minimum and maximum thresholds.&#xD;&#xA;UDI;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="b4745523-855a-4eb6-91f1-2c4c099139d0" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="UDILess" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="760">
      <Symbol value="// The percentage of time that illuminace falls less than minimum&#xD;&#xA;// threshold.&#xD;&#xA;UDILess;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="8fbbc4b7-5900-42b9-9f9e-afa862477cd5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="UDIMore" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="855">
      <Symbol value="// The percentage of time that illuminace falls more than maximum&#xD;&#xA;// threshold.&#xD;&#xA;UDIMore;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="a0be57e4-efb2-4f50-b185-65421c9c5653" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="legendPar" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="950">
      <Symbol value="// Script variable annualMetrics&#xD;&#xA;legendPar;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="1d4264be-f3fb-4950-8639-0ad21f0cdb5e" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="6843555d-80c1-4c7d-b7b4-15cc127b228b" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="2150ec12-1e85-4605-bf49-4ddf53b3a9ec" end_index="0" portType="0" start="49fb47fe-d2a0-4678-bc4c-de04bf5bcd22" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2150ec12-1e85-4605-bf49-4ddf53b3a9ec" end_index="1" portType="0" start="49fb47fe-d2a0-4678-bc4c-de04bf5bcd22" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f1511124-9388-4233-a05a-415f740ca871" end_index="0" portType="0" start="2150ec12-1e85-4605-bf49-4ddf53b3a9ec" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f1511124-9388-4233-a05a-415f740ca871" end_index="1" portType="0" start="ea5a51ff-7f63-447f-946a-e546a2529fce" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f1511124-9388-4233-a05a-415f740ca871" end_index="2" portType="0" start="2d064ee3-42fc-4df4-9e69-22a2ee045966" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f1511124-9388-4233-a05a-415f740ca871" end_index="3" portType="0" start="6c2c7260-79b4-4e50-a75a-1969e937fe15" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f1511124-9388-4233-a05a-415f740ca871" end_index="4" portType="0" start="9faffb7c-b28b-4a3d-ab99-2539156ccf75" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f1511124-9388-4233-a05a-415f740ca871" end_index="5" portType="0" start="c30e7cfc-9c46-4bb9-8319-f4e95ff7916d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8005d75e-8a99-477a-beca-68a44b44c99e" end_index="0" portType="0" start="f1511124-9388-4233-a05a-415f740ca871" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7e3628b5-c297-472d-9a13-bb9c9160c0c8" end_index="0" portType="0" start="8005d75e-8a99-477a-beca-68a44b44c99e" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="455a16f6-9cf4-454b-b1ed-45d1a3395ef9" end_index="0" portType="0" start="8005d75e-8a99-477a-beca-68a44b44c99e" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="461031b8-1a3c-4f49-9613-85a55825c77c" end_index="0" portType="0" start="8005d75e-8a99-477a-beca-68a44b44c99e" start_index="2"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b4745523-855a-4eb6-91f1-2c4c099139d0" end_index="0" portType="0" start="8005d75e-8a99-477a-beca-68a44b44c99e" start_index="3"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8fbbc4b7-5900-42b9-9f9e-afa862477cd5" end_index="0" portType="0" start="8005d75e-8a99-477a-beca-68a44b44c99e" start_index="4"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="a0be57e4-efb2-4f50-b185-65421c9c5653" end_index="0" portType="0" start="8005d75e-8a99-477a-beca-68a44b44c99e" start_index="5"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="1d4264be-f3fb-4950-8639-0ad21f0cdb5e" end_index="0" portType="0" start="2150ec12-1e85-4605-bf49-4ddf53b3a9ec" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="1d4264be-f3fb-4950-8639-0ad21f0cdb5e" end_index="1" portType="0" start="f1511124-9388-4233-a05a-415f740ca871" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="6843555d-80c1-4c7d-b7b4-15cc127b228b" end_index="0" portType="0" start="1d4264be-f3fb-4950-8639-0ad21f0cdb5e" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
